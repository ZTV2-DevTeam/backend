"""
FTV Email Templates - Consistent HTML Email Design

This module provides unified HTML email templates that match the FTV frontend design.
All email functions should use these templates for consistent branding and styling.
"""

def get_base_email_template(
    title: str,
    content: str,
    button_text: str = None,
    button_url: str = None,
    footer_text: str = None
) -> str:
    """
    Generate the base HTML email template matching FTV frontend design.
    
    Args:
        title: Email title/subject for header
        content: Main email content (HTML or plain text)
        button_text: Optional button text (e.g., "Bejelentkez√©s", "Jelsz√≥ vissza√°ll√≠t√°sa")
        button_url: Optional button URL
        footer_text: Optional custom footer text
        
    Returns:
        Complete HTML email string
    """
    # Default footer if none provided
    if footer_text is None:
        footer_text = "Ez egy automatikus email, k√©rj√ºk ne v√°laszoljon r√°."
    
    # Optional button HTML
    button_html = ""
    if button_text and button_url:
        button_html = f"""
        <div style="text-align: center; margin: 40px 0;">
            <a href="{button_url}" 
               style="display: inline-block; 
                      padding: 16px 32px; 
                      background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
                      color: white !important; 
                      text-decoration: none; 
                      border-radius: 12px; 
                      font-weight: 700;
                      font-size: 16px;
                      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
                      transition: all 0.2s ease;
                      letter-spacing: 0.5px;">
                {button_text}
            </a>
        </div>
        """
    
    return f"""
    <!DOCTYPE html>
    <html lang="hu">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{title}</title>
        <style>
            * {{
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }}
            
            body {{
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
                line-height: 1.6;
                color: #333333;
                background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
                margin: 0;
                padding: 20px 0;
            }}
            
            .email-container {{
                max-width: 600px;
                margin: 0 auto;
                background-color: #ffffff;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
                border-radius: 16px;
                overflow: hidden;
            }}
            
            .email-header {{
                background: linear-gradient(135deg, #0f1419 0%, #1a202c 50%, #2d3748 100%);
                color: #ffffff;
                padding: 50px 30px;
                text-align: center;
                position: relative;
                overflow: hidden;
            }}
            
            .email-header::before {{
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: radial-gradient(circle at 30% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 50%),
                           radial-gradient(circle at 70% 80%, rgba(37, 99, 235, 0.08) 0%, transparent 50%);
                pointer-events: none;
            }}
            
            .logo-section {{
                margin-bottom: 20px;
                position: relative;
                z-index: 1;
            }}
            
            .logo-text {{
                font-size: 48px;
                font-weight: 900;
                color: #ffffff;
                text-decoration: none;
                letter-spacing: 3px;
                display: inline-flex;
                align-items: center;
                gap: 12px;
            }}
            
            .logo-text::before {{
                content: 'üì∫';
                font-size: 40px;
                color: #3b82f6;
                filter: drop-shadow(0 2px 4px rgba(59, 130, 246, 0.3));
            }}
            
            .platform-subtitle {{
                font-size: 14px;
                color: #94a3b8;
                margin-top: 8px;
                font-weight: 500;
                letter-spacing: 1px;
            }}
            
            .email-title {{
                font-size: 28px;
                font-weight: 700;
                margin-top: 30px;
                color: #ffffff;
                position: relative;
                z-index: 1;
            }}
            
            .email-content {{
                padding: 50px 40px;
                background-color: #ffffff;
                position: relative;
            }}
            
            .content-section {{
                margin-bottom: 25px;
            }}
            
            .content-section h2 {{
                color: #1e293b;
                font-size: 20px;
                font-weight: 700;
                margin-bottom: 16px;
                padding-bottom: 8px;
                border-bottom: 3px solid #3b82f6;
                position: relative;
            }}
            
            .content-section h2::after {{
                content: '';
                position: absolute;
                bottom: -3px;
                left: 0;
                width: 40px;
                height: 3px;
                background: linear-gradient(90deg, #3b82f6, #1d4ed8);
                border-radius: 2px;
            }}
            
            .content-section p {{
                margin-bottom: 16px;
                color: #475569;
                line-height: 1.7;
                font-size: 16px;
            }}
            
            .info-box {{
                background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
                border: 1px solid #e2e8f0;
                border-left: 5px solid #3b82f6;
                padding: 24px;
                margin: 24px 0;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            }}
            
            .info-box h3 {{
                color: #1e293b;
                font-size: 18px;
                font-weight: 700;
                margin-bottom: 16px;
                display: flex;
                align-items: center;
            }}
            
            .info-box h3::before {{
                content: 'üìã';
                margin-right: 8px;
                font-size: 16px;
            }}
            
            .info-item {{
                margin-bottom: 12px;
                padding: 8px 0;
                border-bottom: 1px solid #e2e8f0;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }}
            
            .info-item:last-child {{
                border-bottom: none;
                margin-bottom: 0;
            }}
            
            .info-item strong {{
                color: #374151;
                font-weight: 600;
                min-width: 120px;
            }}
            
            .highlight-box {{
                background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
                border: 1px solid #93c5fd;
                padding: 24px;
                margin: 24px 0;
                border-radius: 12px;
                text-align: center;
                box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
            }}
            
            .highlight-box h3 {{
                color: #1e40af;
                font-size: 20px;
                font-weight: 700;
                margin-bottom: 12px;
            }}
            
            .highlight-box p {{
                color: #1e40af;
                font-weight: 600;
                margin: 0;
            }}
            
            .warning-box {{
                background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
                border: 1px solid #f59e0b;
                border-left: 5px solid #f59e0b;
                padding: 20px;
                margin: 24px 0;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(245, 158, 11, 0.1);
            }}
            
            .warning-box p {{
                color: #92400e;
                margin: 0;
                font-weight: 500;
            }}
            
            .success-box {{
                background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
                border: 1px solid #10b981;
                border-left: 5px solid #10b981;
                padding: 20px;
                margin: 24px 0;
                border-radius: 12px;
                box-shadow: 0 2px 8px rgba(16, 185, 129, 0.1);
            }}
            
            .success-box p {{
                color: #065f46;
                margin: 0;
                font-weight: 500;
            }}
            
            .email-footer {{
                background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
                color: #94a3b8;
                padding: 40px 30px;
                text-align: center;
            }}
            
            .footer-content {{
                font-size: 14px;
                line-height: 1.6;
            }}
            
            .footer-links {{
                margin-top: 20px;
            }}
            
            .footer-links a {{
                color: #3b82f6;
                text-decoration: none;
                margin: 0 15px;
                font-weight: 500;
                transition: color 0.2s ease;
            }}
            
            .footer-links a:hover {{
                color: #60a5fa;
                text-decoration: underline;
            }}
            
            .copyright {{
                margin-top: 24px;
                font-size: 12px;
                color: #64748b;
                border-top: 1px solid #334155;
                padding-top: 20px;
            }}
            
            @media (max-width: 600px) {{
                .email-container {{
                    margin: 0;
                    box-shadow: none;
                }}
                
                .email-content {{
                    padding: 20px 15px;
                }}
                
                .email-header {{
                    padding: 20px 15px;
                }}
                
                .logo-text {{
                    font-size: 28px;
                }}
                
                .email-title {{
                    font-size: 20px;
                }}
            }}
        </style>
    </head>
    <body>
        <div class="email-container">
            <!-- Header -->
            <div class="email-header">
                <div class="logo-section">
                    <div class="logo-text">FTV</div>
                    <div class="platform-subtitle">Hi√°nyz√°s √Åttekint≈ë Platform</div>
                </div>
                <div class="email-title">{title}</div>
            </div>
            
            <!-- Content -->
            <div class="email-content">
                {content}
                {button_html}
            </div>
            
            <!-- Footer -->
            <div class="email-footer">
                <div class="footer-content">
                    <p>{footer_text}</p>
                    
                    <div class="footer-links">
                        <a href="https://ftv.szlg.info">FTV Rendszer</a>
                        <a href="https://szlgbp.hu">Az Iskola honlapja</a>
                    </div>
                    
                    <div class="copyright">
                        ¬© 2025 FTV - Minden jog fenntartva.
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>
    """


def get_announcement_email_content(announcement, author_name: str) -> str:
    """
    Generate HTML content for announcement emails.
    
    Args:
        announcement: Announcement model instance
        author_name: Full name of the announcement author
        
    Returns:
        HTML content for announcement email
    """
    return f"""
    <div class="content-section">
        <h2>üì¢ √öj k√∂zlem√©ny √©rkezett</h2>
        <p>Kedves Koll√©ga!</p>
        <p>√öj k√∂zlem√©nyt tettek k√∂zz√© az FTV rendszerben.</p>
    </div>
    
    <div class="info-box">
        <h3>{announcement.title}</h3>
        <div class="info-item"><strong>Szerz≈ë:</strong> {author_name}</div>
        <div class="info-item"><strong>D√°tum:</strong> {announcement.created_at.strftime('%Y. %m. %d. %H:%M')}</div>
    </div>
    
    <div class="content-section">
        <h2>Tartalom</h2>
        <p>{announcement.body}</p>
    </div>
    
    <div class="warning-box">
        <p><strong>Figyelem:</strong> A teljes k√∂zlem√©ny √©s esetleges csatolm√°nyok megtekint√©s√©hez l√°togassa meg a FTV rendszert.</p>
    </div>
    """


def get_assignment_addition_email_content(forgatas, contact_person_name: str) -> str:
    """
    Generate HTML content for filming assignment addition emails.
    
    Args:
        forgatas: Forgatas model instance
        contact_person_name: Name of the contact person
        
    Returns:
        HTML content for assignment addition email
    """
    return f"""
    <div class="content-section">
        <h2>üé¨ √öj beoszt√°s</h2>
        <p>Kedves Koll√©ga!</p>
        <p>√ñnt beosztott√°k a k√∂vetkez≈ë forgat√°shoz:</p>
    </div>
    
    <div class="highlight-box">
        <h3>{forgatas.name}</h3>
        <p><strong>K√©rj√ºk, k√©sz√ºlj√∂n fel a megadott id≈ëpontra!</strong></p>
    </div>
    
    <div class="info-box">
        <h3>Forgat√°s r√©szletei</h3>
        <div class="info-item"><strong>N√©v:</strong> {forgatas.name}</div>
        <div class="info-item"><strong>Le√≠r√°s:</strong> {forgatas.description or 'Nincs megadva'}</div>
        <div class="info-item"><strong>D√°tum:</strong> {forgatas.date.strftime('%Y. %m. %d.')}</div>
        <div class="info-item"><strong>Id≈ëpont:</strong> {forgatas.timeFrom.strftime('%H:%M')} - {forgatas.timeTo.strftime('%H:%M')}</div>
        <div class="info-item"><strong>Helysz√≠n:</strong> {forgatas.location or 'Nincs megadva'}</div>
        <div class="info-item"><strong>Kapcsolattart√≥:</strong> {contact_person_name}</div>
    </div>
    
    <div class="content-section">
        <p>K√©rj√ºk, jegyezze fel a forgat√°s r√©szleteit √©s k√©sz√ºlj√∂n fel a megadott id≈ëpontra!</p>
        <p>Tov√°bbi inform√°ci√≥k√©rt √©s r√©szletek√©rt l√°togassa meg a FTV rendszert.</p>
    </div>
    """


def get_assignment_removal_email_content(forgatas, contact_person_name: str) -> str:
    """
    Generate HTML content for filming assignment removal emails.
    
    Args:
        forgatas: Forgatas model instance
        contact_person_name: Name of the contact person
        
    Returns:
        HTML content for assignment removal email
    """
    return f"""
    <div class="content-section">
        <h2>üé¨ Forgat√°si beoszt√°s m√≥dos√≠t√°s</h2>
        <p>Kedves Koll√©ga!</p>
        <p>T√°j√©koztatjuk, hogy a k√∂vetkez≈ë forgat√°sb√≥l t√∂r√∂lt√©k √ñnt:</p>
    </div>
    
    <div class="info-box">
        <h3>T√∂r√∂lt forgat√°s r√©szletei</h3>
        <div class="info-item"><strong>N√©v:</strong> {forgatas.name}</div>
        <div class="info-item"><strong>D√°tum:</strong> {forgatas.date.strftime('%Y. %m. %d.')}</div>
        <div class="info-item"><strong>Id≈ëpont:</strong> {forgatas.timeFrom.strftime('%H:%M')} - {forgatas.timeTo.strftime('%H:%M')}</div>
        <div class="info-item"><strong>Helysz√≠n:</strong> {forgatas.location or 'Nincs megadva'}</div>
        <div class="info-item"><strong>Kapcsolattart√≥:</strong> {contact_person_name}</div>
    </div>
    
    <div class="content-section">
        <p>Ez azt jelenti, hogy m√°r nincs sz√ºks√©ge r√©szt vennie ezen a forgat√°son.</p>
        <p>Ha k√©rd√©se van a v√°ltoz√°ssal kapcsolatban, k√©rj√ºk vegye fel a kapcsolatot a m√©diatan√°raival!</p>
    </div>
    """


def get_password_reset_email_content(user_name: str, reset_url: str) -> str:
    """
    Generate HTML content for password reset emails.
    
    Args:
        user_name: User's full name or username
        reset_url: Password reset URL
        
    Returns:
        HTML content for password reset email
    """
    return f"""
    <div class="content-section">
        <h2>üîê Jelsz√≥ vissza√°ll√≠t√°sa</h2>
        <p>Kedves {user_name}!</p>
        <p>Jelsz√≥ vissza√°ll√≠t√°si k√©relmet kaptunk az √ñn FTV fi√≥kj√°hoz.</p>
    </div>
    
    <div class="info-box">
        <h3>Jelsz√≥ vissza√°ll√≠t√°sa</h3>
        <p>Amennyiben √ñn k√©rte a jelsz√≥ vissza√°ll√≠t√°st, kattintson az al√°bbi gombra:</p>
    </div>
    
    <div class="warning-box">
        <p><strong>Fontos inform√°ci√≥k:</strong></p>
        <p>‚Ä¢ Ez a link 1 √≥r√°n bel√ºl lej√°r</p>
        <p>‚Ä¢ A link biztons√°gosan k√≥dolt (csak a szerver tudja dek√≥dolni)</p>
        <p>‚Ä¢ Ha nem √ñn k√©rte a jelsz√≥ vissza√°ll√≠t√°st, hagyja figyelmen k√≠v√ºl ezt az emailt</p>
    </div>
    
    <div class="content-section">
        <p>Ha nem tudja haszn√°lni a gombot, m√°solja be a k√∂vetkez≈ë linket a b√∂ng√©sz≈ëj√©be:</p>
        <p style="word-break: break-all; color: #007bff;">{reset_url}</p>
    </div>
    """


def get_first_login_email_content(user_name: str, login_url: str) -> str:
    """
    Generate HTML content for first login emails.
    
    Args:
        user_name: User's full name or username
        login_url: First login URL with token
        
    Returns:
        HTML content for first login email
    """
    return f"""
    <div class="content-section">
        <h2>üéâ √údv√∂z√∂lj√ºk az FTV rendszerben!</h2>
        <p>Kedves {user_name}!</p>
        <p>Fi√≥kj√°t sikeresen l√©trehoztuk az FTV rendszerben. Most m√°r hozz√°f√©rhet az √∂sszes funkci√≥hoz!</p>
    </div>
    
    <div class="highlight-box">
        <h3>Els≈ë bejelentkez√©s</h3>
        <p>Kattintson az al√°bbi gombra a biztons√°gos bejelentkez√©shez √©s jelsz√≥ be√°ll√≠t√°s√°hoz.</p>
    </div>
    
    <div class="info-box">
        <h3>Mit tehet a rendszerben?</h3>
        <div class="info-item">‚Ä¢ Forgat√°sok √©s esem√©nyek megtekint√©se</div>
        <div class="info-item">‚Ä¢ Szem√©lyes profil kezel√©se</div>
        <div class="info-item">‚Ä¢ K√∂zlem√©nyek olvas√°sa</div>
        <div class="info-item">‚Ä¢ Beosz√°s √©s hat√°rid≈ëk k√∂vet√©se</div>
    </div>
    
    <div class="warning-box">
        <p><strong>Els≈ë bejelentkez√©s ut√°n:</strong> K√©rj√ºk, √°ll√≠tson be egy er≈ës, egyedi jelsz√≥t a fi√≥kja biztons√°g√°nak √©rdek√©ben.</p>
    </div>
    """


def get_login_info_email_content(user_name: str, username: str, password: str) -> str:
    """
    Generate HTML content for login info emails (admin generated passwords).
    
    Args:
        user_name: User's full name or username
        username: Login username
        password: Generated password
        
    Returns:
        HTML content for login info email
    """
    return f"""
    <div class="content-section">
        <h2>üîê √öj bejelentkez√©si adatok</h2>
        <p>Kedves {user_name}!</p>
        <p>√öj jelsz√≥t gener√°ltunk az √ñn FTV rendszerbeli fi√≥kj√°hoz.</p>
    </div>
    
    <div class="highlight-box">
        <h3>Bejelentkez√©si adatok</h3>
        <div style="text-align: left; margin-top: 15px;">
            <div style="margin: 10px 0; font-size: 16px;">
                <strong>Felhaszn√°l√≥n√©v:</strong> {username}
            </div>
            <div style="margin: 10px 0; font-size: 16px;">
                <strong>√öj jelsz√≥:</strong> 
                <span style="background-color: rgba(255,255,255,0.2); 
                             padding: 5px 10px; 
                             border-radius: 4px; 
                             font-family: 'Courier New', monospace; 
                             font-size: 18px; 
                             font-weight: bold;">
                    {password}
                </span>
            </div>
        </div>
    </div>
    
    <div class="warning-box">
        <p><strong>FONTOS BIZTONS√ÅGI TUDNIVAL√ìK:</strong></p>
        <p>‚Ä¢ K√©rj√ºk, v√°ltoztassa meg a jelsz√≥t els≈ë bejelentkez√©skor</p>
        <p>‚Ä¢ Haszn√°ljon er≈ës, egyedi jelsz√≥t</p>
        <p>‚Ä¢ Ne ossza meg senkivel a bejelentkez√©si adatait</p>
        <p>‚Ä¢ Tartsa biztons√°gban ezt az emailt</p>
    </div>
    
    <div class="content-section">
        <p>Ha k√©rd√©se van, vagy probl√©m√°ja ad√≥dna, k√©rj√ºk vegye fel a kapcsolatot az adminisztr√°torral.</p>
    </div>
    """


def get_forgatas_creation_email_content(forgatas, creator_name: str) -> str:
    """
    Generate HTML content for new Forgat√°s creation notification emails.
    
    Args:
        forgatas: Forgatas model instance
        creator_name: Full name of the person who created the Forgat√°s
        
    Returns:
        HTML content for Forgat√°s creation notification email
    """
    # Format forgatas type in Hungarian
    forgatas_type_display = {
        'kacsa': 'KaCsa',
        'rendes': 'Rendes',
        'rendezveny': 'Rendezv√©ny',
        'egyeb': 'Egy√©b'
    }.get(forgatas.forgTipus, forgatas.forgTipus)
    
    return f"""
    <div class="content-section">
        <h2>üé¨ √öj forgat√°s l√©trehozva</h2>
        <p>Kedves M√©diatan√°r!</p>
        <p>√öj forgat√°st hoztak l√©tre az FTV rendszerben.</p>
    </div>
    
    <div class="highlight-box">
        <h3>{forgatas.name}</h3>
        <p><strong>√öj forgat√°s √©rkezett a rendszerbe!</strong></p>
    </div>
    
    <div class="info-box">
        <h3>Forgat√°s r√©szletei</h3>
        <div class="info-item"><strong>N√©v:</strong> {forgatas.name}</div>
        <div class="info-item"><strong>Le√≠r√°s:</strong> {forgatas.description or 'Nincs megadva'}</div>
        <div class="info-item"><strong>T√≠pus:</strong> {forgatas_type_display}</div>
        <div class="info-item"><strong>D√°tum:</strong> {forgatas.date.strftime('%Y. %m. %d.')}</div>
        <div class="info-item"><strong>Id≈ëpont:</strong> {forgatas.timeFrom.strftime('%H:%M')} - {forgatas.timeTo.strftime('%H:%M')}</div>
        <div class="info-item"><strong>Helysz√≠n:</strong> {forgatas.location.name if forgatas.location else 'Nincs megadva'}</div>
        <div class="info-item"><strong>Kapcsolattart√≥:</strong> {forgatas.contactPerson.name if forgatas.contactPerson else 'Nincs megadva'}</div>
        <div class="info-item"><strong>L√©trehozta:</strong> {creator_name}</div>
        <div class="info-item"><strong>Tan√©v:</strong> {forgatas.tanev if forgatas.tanev else 'Nincs megadva'}</div>
    </div>
    
    {f'''<div class="content-section">
        <h2>Tov√°bbi megjegyz√©sek</h2>
        <p>{forgatas.notes}</p>
    </div>''' if forgatas.notes else ''}
    
    <div class="content-section">
        <p>K√©rj√ºk, tekintse √°t az √∫j forgat√°s r√©szleteit √©s sz√ºks√©g eset√©n vegye fel a kapcsolatot a l√©trehoz√≥j√°val vagy a kapcsolattart√≥val.</p>
        <p>A teljes inform√°ci√≥k √©s a beoszt√°sok kezel√©s√©hez l√°togassa meg a FTV rendszert.</p>
    </div>
    
    <div class="warning-box">
        <p><strong>Figyelem:</strong> Ez egy automatikus √©rtes√≠t√©s az √∫j forgat√°s l√©trehoz√°s√°r√≥l. A forgat√°s r√©szletei v√°ltozhatnak a v√©gleges√≠t√©sig.</p>
    </div>
    """


def send_html_emails_to_multiple_recipients(
    subject: str,
    html_content: str,
    plain_content: str,
    recipient_emails: list,
    from_email: str = None
) -> tuple[int, list]:
    """
    Send HTML emails to multiple recipients using individual send_mail calls.
    This replaces send_mass_mail to support HTML content.
    
    Args:
        subject: Email subject
        html_content: HTML email content
        plain_content: Plain text fallback content
        recipient_emails: List of email addresses
        from_email: Sender email (uses DEFAULT_FROM_EMAIL if None)
        
    Returns:
        Tuple of (successful_count, failed_emails)
    """
    from django.core.mail import send_mail
    from django.conf import settings
    import time
    
    print(f"[EMAIL_DEBUG] ========== EMAIL SENDING DEBUG START ==========")
    print(f"[EMAIL_DEBUG] Function: send_html_emails_to_multiple_recipients")
    print(f"[EMAIL_DEBUG] Recipients count: {len(recipient_emails)}")
    print(f"[EMAIL_DEBUG] Subject: {subject}")
    print(f"[EMAIL_DEBUG] Recipients: {recipient_emails}")
    
    # Debug email configuration
    print(f"[EMAIL_CONFIG] EMAIL_BACKEND: {getattr(settings, 'EMAIL_BACKEND', 'NOT SET')}")
    print(f"[EMAIL_CONFIG] EMAIL_HOST: {getattr(settings, 'EMAIL_HOST', 'NOT SET')}")
    print(f"[EMAIL_CONFIG] EMAIL_PORT: {getattr(settings, 'EMAIL_PORT', 'NOT SET')}")
    print(f"[EMAIL_CONFIG] EMAIL_USE_TLS: {getattr(settings, 'EMAIL_USE_TLS', 'NOT SET')}")
    print(f"[EMAIL_CONFIG] EMAIL_HOST_USER: {getattr(settings, 'EMAIL_HOST_USER', 'NOT SET')}")
    print(f"[EMAIL_CONFIG] EMAIL_HOST_PASSWORD: {'SET' if getattr(settings, 'EMAIL_HOST_PASSWORD', None) else 'NOT SET'}")
    print(f"[EMAIL_CONFIG] DEFAULT_FROM_EMAIL: {getattr(settings, 'DEFAULT_FROM_EMAIL', 'NOT SET')}")
    
    if from_email is None:
        from_email = settings.DEFAULT_FROM_EMAIL
    
    print(f"[EMAIL_DEBUG] Using from_email: {from_email}")
    
    successful_count = 0
    failed_emails = []
    
    print(f"[EMAIL_DEBUG] Starting individual email sending...")
    
    for i, email_address in enumerate(recipient_emails):
        try:
            print(f"[EMAIL_DEBUG] ===== Sending email {i+1}/{len(recipient_emails)} =====")
            print(f"[EMAIL_DEBUG] Recipient: {email_address}")
            print(f"[EMAIL_DEBUG] From: {from_email}")
            print(f"[EMAIL_DEBUG] Subject: {subject}")
            print(f"[EMAIL_DEBUG] HTML content length: {len(html_content)} chars")
            print(f"[EMAIL_DEBUG] Plain content length: {len(plain_content)} chars")
            
            print(f"[EMAIL_DEBUG] Calling Django send_mail...")
            
            send_mail(
                subject=subject,
                message=plain_content,
                html_message=html_content,
                from_email=from_email,
                recipient_list=[email_address],
                fail_silently=False,
            )
            
            successful_count += 1
            print(f"[EMAIL_SUCCESS] ‚úÖ Email sent successfully to {email_address}")
            
            # Small delay to prevent overwhelming SMTP server
            if i < len(recipient_emails) - 1:  # Don't delay after the last email
                print(f"[EMAIL_DEBUG] Waiting 0.1 seconds before next email...")
                time.sleep(0.1)
                
        except Exception as e:
            print(f"[EMAIL_ERROR] ‚ùå Failed to send email to {email_address}")
            print(f"[EMAIL_ERROR] Error type: {type(e).__name__}")
            print(f"[EMAIL_ERROR] Error message: {str(e)}")
            
            # Add specific debugging for common email errors
            error_str = str(e).lower()
            if "connection refused" in error_str:
                print(f"[EMAIL_ERROR] üîß DIAGNOSIS: SMTP server connection refused")
                print(f"[EMAIL_ERROR] - Check EMAIL_HOST and EMAIL_PORT settings")
                print(f"[EMAIL_ERROR] - Verify network connectivity to SMTP server")
            elif "authentication failed" in error_str or "invalid credentials" in error_str:
                print(f"[EMAIL_ERROR] üîß DIAGNOSIS: Authentication failed")
                print(f"[EMAIL_ERROR] - Check EMAIL_HOST_USER and EMAIL_HOST_PASSWORD")
                print(f"[EMAIL_ERROR] - For Gmail, ensure you're using an App Password")
            elif "tls" in error_str or "ssl" in error_str:
                print(f"[EMAIL_ERROR] üîß DIAGNOSIS: TLS/SSL connection issue")
                print(f"[EMAIL_ERROR] - Check EMAIL_USE_TLS setting")
                print(f"[EMAIL_ERROR] - Verify SMTP server supports TLS on this port")
            elif "timeout" in error_str:
                print(f"[EMAIL_ERROR] üîß DIAGNOSIS: Connection timeout")
                print(f"[EMAIL_ERROR] - Check network connectivity")
                print(f"[EMAIL_ERROR] - SMTP server may be temporarily unavailable")
            
            import traceback
            print(f"[EMAIL_ERROR] Full traceback:")
            print(traceback.format_exc())
            
            failed_emails.append(email_address)
    
    print(f"[EMAIL_SUMMARY] ========== EMAIL SENDING SUMMARY ==========")
    print(f"[EMAIL_SUMMARY] Total recipients: {len(recipient_emails)}")
    print(f"[EMAIL_SUMMARY] Successful: {successful_count}")
    print(f"[EMAIL_SUMMARY] Failed: {len(failed_emails)}")
    if failed_emails:
        print(f"[EMAIL_SUMMARY] Failed emails: {failed_emails}")
    print(f"[EMAIL_DEBUG] ========== EMAIL SENDING DEBUG END ==========")
    
    return successful_count, failed_emails